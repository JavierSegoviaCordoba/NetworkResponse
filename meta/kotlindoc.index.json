{
  "ownKey": "kotlindoc",
  "childrenPages": {"kotlindoc": {
    "ownKey": "kotlindoc",
    "childrenPages": {
      "networkresponsecommon": {
        "ownKey": "networkresponsecommon",
        "ownPages": [{
          "reference": {
            "path": "kotlindoc",
            "baseUrl": "http://network-response.javiersc.com",
            "fileName": "networkresponsecommon",
            "extension": "html",
            "usePrettyUrl": true,
            "link": "http://network-response.javiersc.com/kotlindoc/networkresponsecommon"
          },
          "description": "",
          "title": "NetworkResponseCommon",
          "content": "<table>\n<thead>\n<tr><th align=\"left\"><a href=\"https://repo1.maven.org/maven2/com/javiersc/network-response/network-response/\"><img src=\"https://img.shields.io/maven-central/v/com.javiersc.network-response/network-response?label=Master\" alt=\"Master Download\" /><\/a><\/th><th align=\"left\"><a href=\"https://codecov.io/gh/JavierSegoviaCordoba/NetworkResponse/branch/master\"><img src=\"https://img.shields.io/codecov/c/github/JavierSegoviaCordoba/NetworkResponse/master?label=Coverage&amp;logo=codecov&amp;logoColor=white\" alt=\"Coverage Master\" /><\/a><\/th><th align=\"left\"><a href=\"https://github.com/JavierSegoviaCordoba/NetworkResponse/actions?query=workflow%3AMaster/master\"><img src=\"https://img.shields.io/github/workflow/status/JavierSegoviaCordoba/NetworkResponse/Master/master?label=Build&amp;logo=GitHub\" alt=\"Master Build\" /><\/a><\/th><th align=\"left\"><a href=\"https://app.codacy.com/manual/JavierSegoviaCordoba/NetworkResponse/dashboard?bid=17394400\"><img src=\"https://img.shields.io/codacy/grade/be9b2f773c72435a87809cc31bae3df9/master?label=Code%20quality&amp;logo=codacy&amp;logoColor=white\" alt=\"Quality Master\" /><\/a><\/th><\/tr>\n<\/thead>\n<tbody>\n<tr><td align=\"left\"><a href=\"https://oss.sonatype.org/content/repositories/snapshots/com/javiersc/network-response/network-response/\"><img src=\"https://img.shields.io/nexus/s/com.javiersc.network-response/network-response?server=https%3A%2F%2Foss.sonatype.org%2F&amp;label=Develop&amp;color=orange\" alt=\"Develop Download\" /><\/a><\/td><td align=\"left\"><a href=\"https://codecov.io/gh/JavierSegoviaCordoba/NetworkResponse/branch/develop\"><img src=\"https://img.shields.io/codecov/c/github/JavierSegoviaCordoba/NetworkResponse/develop?label=Coverage&amp;logo=codecov&amp;logoColor=white\" alt=\"Coverage Develop\" /><\/a><\/td><td align=\"left\"><a href=\"https://github.com/JavierSegoviaCordoba/NetworkResponse/actions?query=workflow%3ADevelop/develop\"><img src=\"https://img.shields.io/github/workflow/status/JavierSegoviaCordoba/NetworkResponse/Develop/develop?label=Build&amp;logo=GitHub\" alt=\"Develop Build\" /><\/a><\/td><td align=\"left\"><a href=\"https://app.codacy.com/manual/JavierSegoviaCordoba/NetworkResponse/dashboard?bid=17394399\"><img src=\"https://img.shields.io/codacy/grade/be9b2f773c72435a87809cc31bae3df9/develop?label=Code%20quality&amp;logo=codacy&amp;logoColor=white\" alt=\"Quality Develop\" /><\/a><\/td><\/tr>\n<\/tbody>\n<\/table>\n<h1 id=\"networkresponse\"><a href=\"#networkresponse\" id=\"networkresponse\" class=\"anchor\"><\/a><a href=\"/network-response/src/commonMain/kotlin/NetworkResponse.kt\">NetworkResponse<\/a><\/h1>\n<p><code>NetworkResponse<\/code> is a <code>sealed class<\/code> to wrap responses from network requests:<\/p>\n<ul>\n<li><code>Success<\/code> [<code>data<\/code>, <code>code<\/code> and <code>headers<\/code>]<\/li>\n<li><code>Error<\/code> [<code>error<\/code>, <code>code<\/code> and <code>headers<\/code>]<\/li>\n<li><code>UnknownError<\/code> [<code>throwable<\/code>]<\/li>\n<li><code>RemoteNotAvailable<\/code><\/li>\n<li><code>InternetNotAvailable<\/code><\/li>\n<\/ul>\n<p>This library works very well when used in conjunction with\n<a href=\"https://github.com/JavierSegoviaCordoba/Resource\"><code>Resource<\/code><\/a> which is very similar\nto <code>NetworkResponse<\/code> but thought to use with another architecture layer, for example domain objects.\n<code>NetworkResponse<\/code> has mappers to transform it to a <code>Resource<\/code>.<\/p>\n<h2 id=\"features\"><a href=\"#features\" id=\"features\" class=\"anchor\"><\/a>Features<\/h2>\n<ul>\n<li>Multiplatform (NetworkResponse and Resource support)<\/li>\n<li>Retrofit support (jvm)<\/li>\n<li>Ktor support<\/li>\n<\/ul>\n<h2 id=\"download\"><a href=\"#download\" id=\"download\" class=\"anchor\"><\/a>Download<\/h2>\n<p>This library is Kotlin Multiplatform but at this moment jvm is the only artifact generated. It is\navailable at Maven Central.<\/p>\n<pre><code class=\"language-kotlin\">implementation(&quot;com.javiersc.network-response:network-response:$version&quot;)\n<\/code><\/pre>\n<h2 id=\"retrofit\"><a href=\"#retrofit\" id=\"retrofit\" class=\"anchor\"><\/a>Retrofit<\/h2>\n<p>This adapter for <code>Retrofit<\/code> wraps automatically the <code>Retrofit<\/code> responses with a <code>NetworkResponse<\/code>:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nsuspend fun getUsers(): NetworkResponse&lt;List&lt;UserDTO&gt;, ErrorDTO&gt;\n// UserDTO and ErrorDTO should be your data classes\n<\/code><\/pre>\n<p>If the server doesn't return an error body, or it is irrelevant you can mark it as <code>Unit<\/code>:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nsuspend fun getUsers(): NetworkResponse&lt;List&lt;UserDTO&gt;, Unit&gt;\n<\/code><\/pre>\n<p>Add the <code>NetworkResponseCallAdapterFactory<\/code> to the <code>Retrofit<\/code> builder:<\/p>\n<pre><code class=\"language-kotlin\">private val retrofit = Retrofit.Builder().apply {\n    //...\n    addCallAdapterFactory(NetworkResponseCallAdapterFactory())\n    //...\n}.build()\n<\/code><\/pre>\n<p>It is possible to use <code>Deferred<\/code> too:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nfun getUsers(): Deferred&lt;NetworkResponse&lt;List&lt;UserDTO&gt;, ErrorDTO&gt;&gt;\n<\/code><\/pre>\n<h2 id=\"ktor\"><a href=\"#ktor\" id=\"ktor\" class=\"anchor\"><\/a>Ktor<\/h2>\n<p>You only need to wrap the request and do not indicate the type in the client method because it is\ninferred automatically<\/p>\n<pre><code class=\"language-kotlin\">val usersNetworkResponse = NetworkResponse&lt;List&lt;UsersDTO&gt;, ErrorDTO&gt; { client.get(&quot;https://example.com/users&quot;) }\n<\/code><\/pre>\n<h2 id=\"more-artifacts\"><a href=\"#more-artifacts\" id=\"more-artifacts\" class=\"anchor\"><\/a>More artifacts<\/h2>\n<ul>\n<li><a href=\"/resource-extensions\">Resource extensions<\/a><\/li>\n<li><a href=\"/logger-extensions\">Logger extensions<\/a><\/li>\n<\/ul>\n<h2 id=\"credits\"><a href=\"#credits\" id=\"credits\" class=\"anchor\"><\/a>Credits<\/h2>\n<p>Based on <a href=\"https://github.com/haroldadmin/NetworkResponseAdapter\">NetworkResponseAdapter<\/a>\nby <a href=\"https://github.com/haroldadmin\">Kshitij Chauhan<\/a><\/p>\n"
        }]
      },
      "networkresponsejvm": {
        "ownKey": "networkresponsejvm",
        "ownPages": [{
          "reference": {
            "path": "kotlindoc",
            "baseUrl": "http://network-response.javiersc.com",
            "fileName": "networkresponsejvm",
            "extension": "html",
            "usePrettyUrl": true,
            "link": "http://network-response.javiersc.com/kotlindoc/networkresponsejvm"
          },
          "description": "",
          "title": "NetworkResponseJVM",
          "content": "<table>\n<thead>\n<tr><th align=\"left\"><a href=\"https://repo1.maven.org/maven2/com/javiersc/network-response/network-response/\"><img src=\"https://img.shields.io/maven-central/v/com.javiersc.network-response/network-response?label=Master\" alt=\"Master Download\" /><\/a><\/th><th align=\"left\"><a href=\"https://codecov.io/gh/JavierSegoviaCordoba/NetworkResponse/branch/master\"><img src=\"https://img.shields.io/codecov/c/github/JavierSegoviaCordoba/NetworkResponse/master?label=Coverage&amp;logo=codecov&amp;logoColor=white\" alt=\"Coverage Master\" /><\/a><\/th><th align=\"left\"><a href=\"https://github.com/JavierSegoviaCordoba/NetworkResponse/actions?query=workflow%3AMaster/master\"><img src=\"https://img.shields.io/github/workflow/status/JavierSegoviaCordoba/NetworkResponse/Master/master?label=Build&amp;logo=GitHub\" alt=\"Master Build\" /><\/a><\/th><th align=\"left\"><a href=\"https://app.codacy.com/manual/JavierSegoviaCordoba/NetworkResponse/dashboard?bid=17394400\"><img src=\"https://img.shields.io/codacy/grade/be9b2f773c72435a87809cc31bae3df9/master?label=Code%20quality&amp;logo=codacy&amp;logoColor=white\" alt=\"Quality Master\" /><\/a><\/th><\/tr>\n<\/thead>\n<tbody>\n<tr><td align=\"left\"><a href=\"https://oss.sonatype.org/content/repositories/snapshots/com/javiersc/network-response/network-response/\"><img src=\"https://img.shields.io/nexus/s/com.javiersc.network-response/network-response?server=https%3A%2F%2Foss.sonatype.org%2F&amp;label=Develop&amp;color=orange\" alt=\"Develop Download\" /><\/a><\/td><td align=\"left\"><a href=\"https://codecov.io/gh/JavierSegoviaCordoba/NetworkResponse/branch/develop\"><img src=\"https://img.shields.io/codecov/c/github/JavierSegoviaCordoba/NetworkResponse/develop?label=Coverage&amp;logo=codecov&amp;logoColor=white\" alt=\"Coverage Develop\" /><\/a><\/td><td align=\"left\"><a href=\"https://github.com/JavierSegoviaCordoba/NetworkResponse/actions?query=workflow%3ADevelop/develop\"><img src=\"https://img.shields.io/github/workflow/status/JavierSegoviaCordoba/NetworkResponse/Develop/develop?label=Build&amp;logo=GitHub\" alt=\"Develop Build\" /><\/a><\/td><td align=\"left\"><a href=\"https://app.codacy.com/manual/JavierSegoviaCordoba/NetworkResponse/dashboard?bid=17394399\"><img src=\"https://img.shields.io/codacy/grade/be9b2f773c72435a87809cc31bae3df9/develop?label=Code%20quality&amp;logo=codacy&amp;logoColor=white\" alt=\"Quality Develop\" /><\/a><\/td><\/tr>\n<\/tbody>\n<\/table>\n<h1 id=\"networkresponse\"><a href=\"#networkresponse\" id=\"networkresponse\" class=\"anchor\"><\/a><a href=\"/network-response/src/commonMain/kotlin/NetworkResponse.kt\">NetworkResponse<\/a><\/h1>\n<p><code>NetworkResponse<\/code> is a <code>sealed class<\/code> to wrap responses from network requests:<\/p>\n<ul>\n<li><code>Success<\/code> [<code>data<\/code>, <code>code<\/code> and <code>headers<\/code>]<\/li>\n<li><code>Error<\/code> [<code>error<\/code>, <code>code<\/code> and <code>headers<\/code>]<\/li>\n<li><code>UnknownError<\/code> [<code>throwable<\/code>]<\/li>\n<li><code>RemoteNotAvailable<\/code><\/li>\n<li><code>InternetNotAvailable<\/code><\/li>\n<\/ul>\n<p>This library works very well when used in conjunction with\n<a href=\"https://github.com/JavierSegoviaCordoba/Resource\"><code>Resource<\/code><\/a> which is very similar\nto <code>NetworkResponse<\/code> but thought to use with another architecture layer, for example domain objects.\n<code>NetworkResponse<\/code> has mappers to transform it to a <code>Resource<\/code>.<\/p>\n<h2 id=\"features\"><a href=\"#features\" id=\"features\" class=\"anchor\"><\/a>Features<\/h2>\n<ul>\n<li>Multiplatform (NetworkResponse and Resource support)<\/li>\n<li>Retrofit support (jvm)<\/li>\n<li>Ktor support<\/li>\n<\/ul>\n<h2 id=\"download\"><a href=\"#download\" id=\"download\" class=\"anchor\"><\/a>Download<\/h2>\n<p>This library is Kotlin Multiplatform but at this moment jvm is the only artifact generated. It is\navailable at Maven Central.<\/p>\n<pre><code class=\"language-kotlin\">implementation(&quot;com.javiersc.network-response:network-response:$version&quot;)\n<\/code><\/pre>\n<h2 id=\"retrofit\"><a href=\"#retrofit\" id=\"retrofit\" class=\"anchor\"><\/a>Retrofit<\/h2>\n<p>This adapter for <code>Retrofit<\/code> wraps automatically the <code>Retrofit<\/code> responses with a <code>NetworkResponse<\/code>:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nsuspend fun getUsers(): NetworkResponse&lt;List&lt;UserDTO&gt;, ErrorDTO&gt;\n// UserDTO and ErrorDTO should be your data classes\n<\/code><\/pre>\n<p>If the server doesn't return an error body, or it is irrelevant you can mark it as <code>Unit<\/code>:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nsuspend fun getUsers(): NetworkResponse&lt;List&lt;UserDTO&gt;, Unit&gt;\n<\/code><\/pre>\n<p>Add the <code>NetworkResponseCallAdapterFactory<\/code> to the <code>Retrofit<\/code> builder:<\/p>\n<pre><code class=\"language-kotlin\">private val retrofit = Retrofit.Builder().apply {\n    //...\n    addCallAdapterFactory(NetworkResponseCallAdapterFactory())\n    //...\n}.build()\n<\/code><\/pre>\n<p>It is possible to use <code>Deferred<\/code> too:<\/p>\n<pre><code class=\"language-kotlin\">@GET(&quot;users&quot;)\nfun getUsers(): Deferred&lt;NetworkResponse&lt;List&lt;UserDTO&gt;, ErrorDTO&gt;&gt;\n<\/code><\/pre>\n<h2 id=\"ktor\"><a href=\"#ktor\" id=\"ktor\" class=\"anchor\"><\/a>Ktor<\/h2>\n<p>You only need to wrap the request and do not indicate the type in the client method because it is\ninferred automatically<\/p>\n<pre><code class=\"language-kotlin\">val usersNetworkResponse = NetworkResponse&lt;List&lt;UsersDTO&gt;, ErrorDTO&gt; { client.get(&quot;https://example.com/users&quot;) }\n<\/code><\/pre>\n<h2 id=\"more-artifacts\"><a href=\"#more-artifacts\" id=\"more-artifacts\" class=\"anchor\"><\/a>More artifacts<\/h2>\n<ul>\n<li><a href=\"/resource-extensions\">Resource extensions<\/a><\/li>\n<li><a href=\"/logger-extensions\">Logger extensions<\/a><\/li>\n<\/ul>\n<h2 id=\"credits\"><a href=\"#credits\" id=\"credits\" class=\"anchor\"><\/a>Credits<\/h2>\n<p>Based on <a href=\"https://github.com/haroldadmin/NetworkResponseAdapter\">NetworkResponseAdapter<\/a>\nby <a href=\"https://github.com/haroldadmin\">Kshitij Chauhan<\/a><\/p>\n"
        }]
      }
    }
  }}
}